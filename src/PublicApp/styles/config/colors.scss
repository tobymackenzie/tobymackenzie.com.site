/*-! consider moving back to straight variables in consideration of:
- verbose map-* syntax
- [color names are seen as color objects anywhere they are used as an independent token](https://github.com/sass/sass/issues/1256), eg as map keys and values, but not selectors, variable names, property names.  In 'compressed' mode, where color objects become hex values, they are seen as if you literally wrote the hex values in the code.  This means we will have to quote every map key to avoid this problem and maintain consistency
*/

/*=====
==named colors

Colors to be used in the modules section, named based on their color for easy lookup.  Also can contain browser default colors.  None of these colors should be directly used in other files.
*/
$namedColors: #4e784e;
$namedColors-alt: #d1ffd1;
$namedColors: (
	baseGreen: $namedColors
	,blackGreen: #003300
	,darkGreen: darken($namedColors, 20%)
	,'purple': rebeccapurple
	,'red': #bb6600
	,strongGreen: #225522
	,lightGreen: $namedColors-alt
	,lighterGreen: lighten($namedColors-alt, 5%)
	,aGreen: #447744
	,aVisitedGreen: darken($namedColors, 10%)
	,nearBlack: #002200
	,whiteGreen: lighten($namedColors, 60%)

	//==kermit
	,brightKermitGreen: hsl(120, 60%, 52%)
	,lessBrightKermitGreen: hsl(120, 50%, 72%)
	,lightKermitGreen: hsl(120, 55%, 72%)
	,subduedKermitGreen: hsl(120, 26%, 62%)
);

/*=====
==direct use colors

Colors that will be defined directly and used in other files.  Used for classes with color names, such as when a color name is selectable in a CMS that causes a color-name class to be used in generated content.
*/
$colors: map-merge($colors, (
));

/*=====
==modules

Colors named for what they will be styling.  These are to be used in other files.  Do not define colors directly here.
=====*/
$colors: map-merge($colors, (
	primaryBG: map-get($namedColors, whiteGreen),
	primaryFG: map-get($namedColors, blackGreen),
	primaryLinkFG: map-get($namedColors, aGreen),
	secondaryBG: map-get($namedColors, blackGreen),
	secondaryFG: map-get($namedColors, whiteGreen),
	secondaryLinkFG: map-get($namedColors, lightGreen),
	secondaryLinkFocusFG: map-get($namedColors, lighterGreen),
	secondaryLinkFocusBG: map-get($namedColors, aGreen),
	tertiaryBG: map-get($namedColors, darkGreen),
	tertiaryFG: map-get($namedColors, whiteGreen),
	tertiaryLinkFG: map-get($namedColors, lightGreen),
	baseBG: map-get($namedColors, baseGreen),
	baseFG: map-get($namedColors, lighterGreen),
	border: map-get($namedColors, blackGreen),
	boxOutline: map-get($namedColors, darkGreen),
	chromeHeaderBG: map-get($namedColors, darkGreen),
	chromeHeaderFG: map-get($namedColors, lighterGreen),
	chromeLogo: map-get($namedColors, lightGreen),
	codeFG: map-get($namedColors, lighterGreen),
	codeBG: map-get($namedColors, blackGreen),
	docNavIcon: map-get($namedColors, strongGreen),
	heading: map-get($namedColors, strongGreen),
	insertBG: map-get($namedColors, lighterGreen),
	linkBG: map-get($namedColors, lightGreen),
	linkFGActive: map-get($namedColors, 'purple'),
	linkFGFocus: map-get($namedColors, strongGreen),
	linkFGVisited: map-get($namedColors, aVisitedGreen),
	logo: map-get($namedColors, 'purple'),
	mainBorder: map-get($namedColors, baseGreen),
	proofreadersMark: map-get($namedColors, 'red'),
	strong: map-get($namedColors, strongGreen)
));
$darkThemeColors: (
	baseBG: darken(map-get($namedColors, darkGreen), 15%),
	baseFG: map-get($namedColors, lightGreen),
	chromeHeaderBG: map-get($namedColors, blackGreen),
	contentBorder: map-get($namedColors, lightGreen),
	heading: map-get($namedColors, lightKermitGreen),
	insertBG: map-get($namedColors, darkGreen),
	linkBG: map-get($namedColors, darkGreen),
	linkFGActive: map-get($namedColors, 'purple'),
	linkFGFocus: map-get($namedColors, brightKermitGreen),
	linkFGVisited: map-get($namedColors, subduedKermitGreen),
	navBG: map-get($namedColors, nearBlack),
	primaryBG: map-get($namedColors, nearBlack),
	primaryFG: map-get($namedColors, lightGreen),
	primaryLinkFG: map-get($namedColors, lightKermitGreen),
	strong: map-get($namedColors, lightKermitGreen)
);
//--merge in colors derived from others
$colors: map-merge($colors, (
));
