#!/usr/bin/env php
<?php
use TJM\Files\Files;

//--config
$projectPath = realpath(__DIR__ . '/..');
$autoloadPath = $projectPath . '/vendor/autoload.php';

//--make sure we have var folders
foreach([
	'var',
	'var/cache',
	'var/logs',
] as $dir){
	$path = $projectPath . '/' . $dir;
	if(!file_exists($path)){
		passthru('mkdir ' . $path);
	}
}

//--make sure we have vendors installed
if(!file_exists($autoloadPath)){
	chdir($projectPath);
	$composerCommand = $localCompser = __DIR__ . '/composer';
	if(!file_exists($localCompser)){
		if(empty(shell_exec("which composer"))){
			throw new Exception("Composer must be installed to install project dependencies");
		}else{
			$composerCommand = 'composer';
		}
	}
	passthru($composerCommand . ' install', $return);
	if($return !== 0){
		throw new Exception("Installing project dependencies failed");
	}
}

//--pull in vendors
require_once($autoloadPath);

//--install webroot files
foreach([
	'public'=> $projectPath . '/src/PublicApp/www'
	,'short'=> $projectPath . '/src/ShortApp/www'
] as $name=> $srcPath){
	foreach(glob($srcPath . '/{.??*,.[!.],*}', GLOB_BRACE) as $from){
		$to = $projectPath . '/dist/' . $name . '/' . basename($from);
		Files::symlinkRelativelySafely($to, $from, $projectPath);
	}
}
